---

- hosts: linux
  
  vars:
          jobids: []

  tasks:
        - name: Task 1
          command: /bin/sleep 5
          when: ansible_hostname == 'centos1'
          async: 10
          poll: 0
          register: result1

        - name: Task 2
          command: /bin/sleep 5
          when: ansible_hostname == 'centos2'
          async: 10
          poll: 0
          register: result2

        - name: Task 3
          command: /bin/sleep 5
          when: ansible_hostname == 'centos3'
          async: 10
          poll: 0
          register: result3

        - name: Task 4
          command: /bin/sleep 30
          when: ansible_hostname == 'ubuntu1'
          async: 10
          poll: 0
          register: result4

        - name: Task 5
          command: /bin/sleep 5
          when: ansible_hostname == 'ubuntu2'
          async: 10
          poll: 0
          register: result5

        - name: Task 6
          command: /bin/sleep 5
          when: ansible_hostname == 'ubuntu3'
          async: 10
          poll: 0
          register: result6

        - name: Capture job id
          set_fact:
                  jobids: 
                          {% if item.ansible_job_id is defined -%}
                                {{ jobids + [item.ansible_job_id] }}
                          {% else -%}
                                {{ jobids }}
                          {% endif %}
          with_items: "{{ [ result1, result2, result3, result4, result5, result6 ] }}"

        - name: show results
          debug:
                  var: result1.ansible_job_id

        - name: Show job ids
          debug:
                  var: jobids

        - name: 'Wait for job ids'
          async_status:
                  jid: "{{ item }}"
          with_items: "{{ jobids }}"
          register: jobs_result
          until: jobs_result.finished
          retries: 30

...

